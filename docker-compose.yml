version: '3.9'

services:
  elasticsearch:
    container_name: elasticsearch
    # hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    environment:      
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - network.host=0.0.0.0
      - cluster.name="elastic_stack_logging"
      - node.name="elastic_stack_logging_data"
      - discovery.zen.minimum_master_nodes=1
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=elastic
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s -L http://localhost:9200 || exit 1"
        ]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - elastic

  kibana:
    container_name: kibana
    # hostname: kibana
    image: docker.elastic.co/kibana/kibana:8.10.2
    environment:      
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: elastic
    ports:
      - "5601:5601"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s -L http://localhost:5601/ || exit 1"
        ]
      interval: 30s
      timeout: 20s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic

volumes:
    mongo-data:
    elasticsearch_data:

networks:
  elastic:
    driver: bridge